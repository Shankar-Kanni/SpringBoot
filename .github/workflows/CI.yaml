name: My First Workflow

on:
    push: 
        branches: 
            - main
            - master

jobs:
    build-spring-boot:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Repo
              uses: actions/checkout@v4
            - uses: actions/setup-java@v4
              with:
                distribution: 'zulu' # See 'Supported distributions' for available options
                java-version: '21'
            - name: Run spring boot
              run: |
                mvn package
                ls -lrth target
            - name: Upload the artifact
              uses: actions/upload-artifact@v4
              with:
                name: my-artifact
                path: target/*.jar
    docker:
        name: Containerization
        needs: [build-spring-boot]
        permissions: 
          packages: write
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repo
          uses: actions/checkout@v4
        - name: List
          run: ls -lrtha

        - name: Download the file
          uses: actions/download-artifact@v4
          with:
            name: my-artifact
            path: target/

        - name: List
          run: ls -lrtha target/


        - name: Dockerhub Login
          uses: docker/login-action@v3
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_PASSWORD }}

        - name: Docker Build For Testing
          uses: docker/build-push-action@v4
          with:
            context: .
            push: true
            tags: ${{ secrets.DOCKERHUB_USERNAME }}/spring-boot:${{ github.sha }}

        - name: Docker Image Testing
          run: |
            docker images
            docker run --name spring-boot-app -d  \
                -p 8080:8080 \
                ${{ secrets.DOCKERHUB_USERNAME }}/spring-boot:${{ github.sha }}
            
            # export IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' spring-boot-app)
            # echo $IP
            docker ps
            echo Testing Image URL using wget 
            wget -q -O - localhost:8080/api/hello | grep Hello

    dev-deploy:
      needs: docker
      uses: ./.github/workflows/reuse-deploy.yaml
      secrets: 
        k8s-kubeconfig: ${{ secrets.KUBECONFIG }}
      with:
        k8s-manifest-dir: kubernetes/development/
              
